name: Trivy Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Scan Docker image and Terraform IaC with Trivy and tfsec
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Date
        id: set-date
        run: echo "DATE=$(date +%m.%d.%Y)" >> $GITHUB_ENV

      - name: Create output directory
        run: mkdir -p "GitHubActions/Trivy Automation"

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Run Trivy vulnerability scan on Docker image
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: cloudhack01/vulnapp:latest
          format: 'json'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'
          output: 'GitHubActions/Trivy Automation/trivy_report_${{ env.DATE }}.json'

      - name: Install tfsec
        run: |
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install.sh | bash

      - name: Scan remote Terraform repository with tfsec
        run: |
          git clone https://github.com/claranet/terraform-azurerm-run-iaas.git temp-repo
          cd temp-repo
          tfsec . --format json > "../GitHubActions/Trivy Automation/tfsec_report_${{ env.DATE }}.json"
          cd ..
          rm -rf temp-repo

      - name: Verify scan results exist
        run: ls -l "GitHubActions/Trivy Automation/"

      - name: Commit scan results to repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "RafaelView"
          git config --global user.email ""
          git add "GitHubActions/Trivy Automation/trivy_report_${{ env.DATE }}.json"
          git add "GitHubActions/Trivy Automation/tfsec_report_${{ env.DATE }}.json"
          git commit -m "Add Trivy and tfsec scan reports (Docker + Terraform) for ${{ env.DATE }}"
          git push origin HEAD:main
