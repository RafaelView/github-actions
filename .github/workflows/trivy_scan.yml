name: Trivy Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Scan Docker image and Terraform IaC with Trivy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Date
        id: set-date
        run: echo "DATE=$(date +%m.%d.%Y)" >> $GITHUB_ENV

      - name: Create output directory
        run: mkdir -p "GitHubActions/Trivy Automation"

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Install Terraform
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install -y terraform

      - name: Run Trivy vulnerability scan on Docker image
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: cloudhack01/vulnapp:latest
          format: 'json'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'
          output: 'GitHubActions/Trivy Automation/trivy_report_${{ env.DATE }}.json'

      - name: Scan Terraform IaC with Trivy
        run: |
          git clone https://github.com/hashicorp/terraform-guides.git temp-repo
          cd temp-repo

          # Inicializar Terraform
          terraform init

          # Crear un plan de Terraform y exportarlo como JSON
          terraform plan -out=tfplan.binary
          terraform show -json tfplan.binary > tfplan.json

          # Escanear el archivo JSON del plan con Trivy
          trivy config --format json --output "../GitHubActions/Trivy Automation/trivy_terraform_report_${{ env.DATE }}.json" tfplan.json

          cd ..
          rm -rf temp-repo

      - name: Verify scan results exist
        run: ls -l "GitHubActions/Trivy Automation/"

      - name: Commit scan results to repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "RafaelView"
          git config --global user.email "rafael.jimenezb@viewnext.com"
          git add "GitHubActions/Trivy Automation/trivy_report_${{ env.DATE }}.json"
          git add "GitHubActions/Trivy Automation/trivy_terraform_report_${{ env.DATE }}.json"
          git commit -m "Add Trivy scan reports (Docker + Terraform) for ${{ env.DATE }}"
          git push origin HEAD:main
