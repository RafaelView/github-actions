{
  "SchemaVersion": 2,
  "CreatedAt": "2025-05-09T09:32:53.657132931Z",
  "ArtifactName": ".",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "examples/block-public-access",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 53,
        "Failures": 0
      }
    },
    {
      "Target": "examples/complete",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 55,
        "Failures": 0
      }
    },
    {
      "Target": "examples/ipam",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 53,
        "Failures": 0
      }
    },
    {
      "Target": "examples/ipv6-dualstack",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 53,
        "Failures": 0
      }
    },
    {
      "Target": "examples/ipv6-only",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 55,
        "Failures": 0
      }
    },
    {
      "Target": "examples/issues",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 55,
        "Failures": 0
      }
    },
    {
      "Target": "examples/manage-default-vpc",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 54,
        "Failures": 0
      }
    },
    {
      "Target": "examples/network-acls",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 53,
        "Failures": 0
      }
    },
    {
      "Target": "examples/outpost",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 53,
        "Failures": 0
      }
    },
    {
      "Target": "examples/secondary-cidr-blocks",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 53,
        "Failures": 0
      }
    },
    {
      "Target": "examples/separate-route-tables",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 53,
        "Failures": 0
      }
    },
    {
      "Target": "examples/simple",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 53,
        "Failures": 0
      }
    },
    {
      "Target": "examples/vpc-flow-logs",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 61,
        "Failures": 0
      }
    },
    {
      "Target": "examples/vpc-flow-logs/main.tf",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 0,
        "Failures": 1
      },
      "Misconfigurations": [
        {
          "Type": "Terraform Security Check",
          "ID": "AVD-AWS-0017",
          "AVDID": "AVD-AWS-0017",
          "Title": "CloudWatch log groups should be encrypted using CMK",
          "Description": "CloudWatch log groups are encrypted by default, however, to get the full benefit of controlling key rotation and other KMS aspects a KMS CMK should be used.\n",
          "Message": "Log group is not encrypted.",
          "Namespace": "builtin.aws.cloudwatch.aws0017",
          "Query": "data.builtin.aws.cloudwatch.aws0017.deny",
          "Resolution": "Enable CMK encryption of CloudWatch Log Groups",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0017",
          "References": [
            "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html",
            "https://avd.aquasec.com/misconfig/avd-aws-0017"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "aws_cloudwatch_log_group.flow_log",
            "Provider": "AWS",
            "Service": "cloudwatch",
            "StartLine": 183,
            "EndLine": 185,
            "Code": {
              "Lines": [
                {
                  "Number": 183,
                  "Content": "resource \"aws_cloudwatch_log_group\" \"flow_log\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_cloudwatch_log_group\"\u001b[0m \u001b[38;5;37m\"flow_log\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 184,
                  "Content": "  name = \"vpc-flow-logs-to-cloudwatch-${random_pet.this.id}\"",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mname\u001b[0m = \u001b[38;5;37m\"vpc-flow-logs-to-cloudwatch-\u001b[0m\u001b[38;5;37m${\u001b[0mrandom_pet.this.id\u001b[38;5;37m}\u001b[0m\u001b[38;5;37m\"",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 185,
                  "Content": "}",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m}",
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            }
          }
        }
      ]
    },
    {
      "Target": "git::https:/github.com/terraform-aws-modules/terraform-aws-s3-bucket?ref=428d56adbfaceeee1b1350df87a010d95fd39f3f/main.tf",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 0,
        "Failures": 4
      },
      "Misconfigurations": [
        {
          "Type": "Terraform Security Check",
          "ID": "AVD-AWS-0088",
          "AVDID": "AVD-AWS-0088",
          "Title": "Unencrypted S3 bucket.",
          "Description": "S3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.\n",
          "Message": "Bucket does not have encryption enabled",
          "Namespace": "builtin.aws.s3.aws0088",
          "Query": "data.builtin.aws.s3.aws0088.deny",
          "Resolution": "Configure bucket encryption",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0088",
          "References": [
            "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
            "https://avd.aquasec.com/misconfig/avd-aws-0088"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.s3_bucket",
            "Provider": "AWS",
            "Service": "s3",
            "StartLine": 25,
            "EndLine": 34,
            "Code": {
              "Lines": [
                {
                  "Number": 25,
                  "Content": "resource \"aws_s3_bucket\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_s3_bucket\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 26,
                  "Content": "  count = local.create_bucket ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_bucket \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 27,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 28,
                  "Content": "  bucket        = var.bucket",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mbucket\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.bucket",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  bucket_prefix = var.bucket_prefix",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mbucket_prefix\u001b[0m = \u001b[38;5;33mvar\u001b[0m.bucket_prefix",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  force_destroy       = var.force_destroy",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mforce_destroy\u001b[0m       = \u001b[38;5;33mvar\u001b[0m.force_destroy",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  object_lock_enabled = var.object_lock_enabled",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mobject_lock_enabled\u001b[0m = \u001b[38;5;33mvar\u001b[0m.object_lock_enabled",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  tags                = var.tags",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mtags\u001b[0m                = \u001b[38;5;33mvar\u001b[0m.tags",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "}",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.s3_bucket",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 143,
                  "EndLine": 152
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "s3-bucket-logging",
          "AVDID": "AVD-AWS-0089",
          "Title": "S3 Bucket Logging",
          "Description": "Ensures S3 bucket logging is enabled for S3 buckets",
          "Message": "Bucket has logging disabled",
          "Namespace": "builtin.aws.s3.aws0089",
          "Query": "data.builtin.aws.s3.aws0089.deny",
          "Resolution": "Add a logging block to the resource to enable access logging",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/s3-bucket-logging",
          "References": [
            "https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerLogs.html",
            "https://docs.aws.amazon.com/AmazonS3/latest/userguide/enable-server-access-logging.html",
            "https://avd.aquasec.com/misconfig/s3-bucket-logging"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.s3_bucket",
            "Provider": "AWS",
            "Service": "s3",
            "StartLine": 25,
            "EndLine": 34,
            "Code": {
              "Lines": [
                {
                  "Number": 25,
                  "Content": "resource \"aws_s3_bucket\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_s3_bucket\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 26,
                  "Content": "  count = local.create_bucket ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_bucket \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 27,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 28,
                  "Content": "  bucket        = var.bucket",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mbucket\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.bucket",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  bucket_prefix = var.bucket_prefix",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mbucket_prefix\u001b[0m = \u001b[38;5;33mvar\u001b[0m.bucket_prefix",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  force_destroy       = var.force_destroy",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mforce_destroy\u001b[0m       = \u001b[38;5;33mvar\u001b[0m.force_destroy",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  object_lock_enabled = var.object_lock_enabled",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mobject_lock_enabled\u001b[0m = \u001b[38;5;33mvar\u001b[0m.object_lock_enabled",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  tags                = var.tags",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mtags\u001b[0m                = \u001b[38;5;33mvar\u001b[0m.tags",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "}",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.s3_bucket",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 143,
                  "EndLine": 152
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "AVD-AWS-0090",
          "AVDID": "AVD-AWS-0090",
          "Title": "S3 Data should be versioned",
          "Description": "Versioning in Amazon S3 is a means of keeping multiple variants of an object in the same bucket.\n\nYou can use the S3 Versioning feature to preserve, retrieve, and restore every version of every object stored in your buckets.\n\nWith versioning you can recover more easily from both unintended user actions and application failures.\n",
          "Message": "Bucket does not have versioning enabled",
          "Namespace": "builtin.aws.s3.aws0090",
          "Query": "data.builtin.aws.s3.aws0090.deny",
          "Resolution": "Enable versioning to protect against accidental/malicious removal or modification",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0090",
          "References": [
            "https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html",
            "https://avd.aquasec.com/misconfig/avd-aws-0090"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.s3_bucket",
            "Provider": "AWS",
            "Service": "s3",
            "StartLine": 25,
            "EndLine": 34,
            "Code": {
              "Lines": [
                {
                  "Number": 25,
                  "Content": "resource \"aws_s3_bucket\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_s3_bucket\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 26,
                  "Content": "  count = local.create_bucket ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_bucket \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 27,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 28,
                  "Content": "  bucket        = var.bucket",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mbucket\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.bucket",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  bucket_prefix = var.bucket_prefix",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mbucket_prefix\u001b[0m = \u001b[38;5;33mvar\u001b[0m.bucket_prefix",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  force_destroy       = var.force_destroy",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mforce_destroy\u001b[0m       = \u001b[38;5;33mvar\u001b[0m.force_destroy",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  object_lock_enabled = var.object_lock_enabled",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mobject_lock_enabled\u001b[0m = \u001b[38;5;33mvar\u001b[0m.object_lock_enabled",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  tags                = var.tags",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mtags\u001b[0m                = \u001b[38;5;33mvar\u001b[0m.tags",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "}",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.s3_bucket",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 143,
                  "EndLine": 152
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "AVD-AWS-0132",
          "AVDID": "AVD-AWS-0132",
          "Title": "S3 encryption should use Customer Managed Keys",
          "Description": "Encryption using AWS keys provides protection for your S3 buckets. To increase control of the encryption and manage factors like rotation use customer managed keys.\n",
          "Message": "Bucket does not encrypt data with a customer managed key.",
          "Namespace": "builtin.aws.s3.aws0132",
          "Query": "data.builtin.aws.s3.aws0132.deny",
          "Resolution": "Enable encryption using customer managed keys",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0132",
          "References": [
            "https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html",
            "https://avd.aquasec.com/misconfig/avd-aws-0132"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.s3_bucket",
            "Provider": "AWS",
            "Service": "s3",
            "StartLine": 25,
            "EndLine": 34,
            "Code": {
              "Lines": [
                {
                  "Number": 25,
                  "Content": "resource \"aws_s3_bucket\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_s3_bucket\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 26,
                  "Content": "  count = local.create_bucket ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_bucket \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 27,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 28,
                  "Content": "  bucket        = var.bucket",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mbucket\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.bucket",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  bucket_prefix = var.bucket_prefix",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mbucket_prefix\u001b[0m = \u001b[38;5;33mvar\u001b[0m.bucket_prefix",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  force_destroy       = var.force_destroy",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mforce_destroy\u001b[0m       = \u001b[38;5;33mvar\u001b[0m.force_destroy",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  object_lock_enabled = var.object_lock_enabled",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mobject_lock_enabled\u001b[0m = \u001b[38;5;33mvar\u001b[0m.object_lock_enabled",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  tags                = var.tags",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mtags\u001b[0m                = \u001b[38;5;33mvar\u001b[0m.tags",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "}",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.s3_bucket",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 143,
                  "EndLine": 152
                }
              }
            ]
          }
        }
      ]
    },
    {
      "Target": "main.tf",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 0,
        "Failures": 122
      },
      "Misconfigurations": [
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-default-vpc",
          "AVDID": "AVD-AWS-0101",
          "Title": "AWS best practice to not use the default VPC for workflows",
          "Description": "Default VPC does not have a lot of the critical security features that standard VPC comes with, new resources should not be created in the default VPC and it should not be present in the Terraform.\n",
          "Message": "Default VPC is used.",
          "Namespace": "builtin.aws.ec2.aws0101",
          "Query": "data.builtin.aws.ec2.aws0101.deny",
          "Resolution": "Create a non-default vpc for resources to be created in",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-default-vpc",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-default-vpc"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 1252,
            "EndLine": 1263,
            "Code": {
              "Lines": [
                {
                  "Number": 1252,
                  "Content": "resource \"aws_default_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_default_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 1253,
                  "Content": "  count = var.manage_default_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = \u001b[38;5;33mvar\u001b[0m.manage_default_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1254,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1255,
                  "Content": "  enable_dns_support   = var.default_vpc_enable_dns_support",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245menable_dns_support\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.default_vpc_enable_dns_support",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1256,
                  "Content": "  enable_dns_hostnames = var.default_vpc_enable_dns_hostnames",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245menable_dns_hostnames\u001b[0m = \u001b[38;5;33mvar\u001b[0m.default_vpc_enable_dns_hostnames",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1257,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1258,
                  "Content": "  tags = merge(",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mtags\u001b[0m =\u001b[38;5;33m merge\u001b[0m(",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1259,
                  "Content": "    { \"Name\" = coalesce(var.default_vpc_name, \"default\") },",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    { \u001b[38;5;37m\"Name\"\u001b[0m \u001b[38;5;245m=\u001b[0m\u001b[38;5;33m coalesce\u001b[0m(\u001b[38;5;33mvar\u001b[0m.default_vpc_name, \u001b[38;5;37m\"default\"\u001b[0m) },",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1260,
                  "Content": "    var.tags,",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    \u001b[38;5;33mvar\u001b[0m.tags,",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 1261,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc",
                "Filename": "examples/manage-default-vpc/main.tf",
                "Location": {
                  "StartLine": 20,
                  "EndLine": 30
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 254,
            "EndLine": 254,
            "Code": {
              "Lines": [
                {
                  "Number": 242,
                  "Content": "resource \"aws_network_acl_rule\" \"public_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 243,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 254,
                  "Content": "  protocol        = var.public_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 256,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 257,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 242,
                  "EndLine": 257
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 373,
            "EndLine": 373,
            "Code": {
              "Lines": [
                {
                  "Number": 361,
                  "Content": "resource \"aws_network_acl_rule\" \"private_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 362,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 373,
                  "Content": "  protocol        = var.private_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 375,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 376,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 361,
                  "EndLine": 376
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/outpost/main.tf",
                "Location": {
                  "StartLine": 124,
                  "EndLine": 154
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 940,
            "EndLine": 940,
            "Code": {
              "Lines": [
                {
                  "Number": 928,
                  "Content": "resource \"aws_network_acl_rule\" \"intra_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"intra_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 929,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 940,
                  "Content": "  protocol        = var.intra_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.intra_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 942,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 943,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.intra_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 928,
                  "EndLine": 943
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 940,
            "EndLine": 940,
            "Code": {
              "Lines": [
                {
                  "Number": 928,
                  "Content": "resource \"aws_network_acl_rule\" \"intra_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"intra_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 929,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 940,
                  "Content": "  protocol        = var.intra_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.intra_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 942,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 943,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.intra_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 928,
                  "EndLine": 943
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 923,
            "EndLine": 923,
            "Code": {
              "Lines": [
                {
                  "Number": 911,
                  "Content": "resource \"aws_network_acl_rule\" \"intra_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"intra_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 912,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 923,
                  "Content": "  protocol        = var.intra_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.intra_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 925,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 926,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.intra_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 911,
                  "EndLine": 926
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 822,
            "EndLine": 822,
            "Code": {
              "Lines": [
                {
                  "Number": 810,
                  "Content": "resource \"aws_network_acl_rule\" \"elasticache_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"elasticache_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 811,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 822,
                  "Content": "  protocol        = var.elasticache_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.elasticache_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 824,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 825,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.elasticache_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 810,
                  "EndLine": 825
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 805,
            "EndLine": 805,
            "Code": {
              "Lines": [
                {
                  "Number": 793,
                  "Content": "resource \"aws_network_acl_rule\" \"elasticache_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"elasticache_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 794,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 805,
                  "Content": "  protocol        = var.elasticache_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.elasticache_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 807,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 808,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.elasticache_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 793,
                  "EndLine": 808
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 692,
            "EndLine": 692,
            "Code": {
              "Lines": [
                {
                  "Number": 680,
                  "Content": "resource \"aws_network_acl_rule\" \"redshift_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"redshift_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 681,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 692,
                  "Content": "  protocol        = var.redshift_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.redshift_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 694,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 695,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.redshift_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 680,
                  "EndLine": 695
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 675,
            "EndLine": 675,
            "Code": {
              "Lines": [
                {
                  "Number": 663,
                  "Content": "resource \"aws_network_acl_rule\" \"redshift_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"redshift_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 664,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 675,
                  "Content": "  protocol        = var.redshift_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.redshift_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 677,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 678,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.redshift_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 663,
                  "EndLine": 678
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 805,
            "EndLine": 805,
            "Code": {
              "Lines": [
                {
                  "Number": 793,
                  "Content": "resource \"aws_network_acl_rule\" \"elasticache_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"elasticache_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 794,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 805,
                  "Content": "  protocol        = var.elasticache_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.elasticache_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 807,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 808,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.elasticache_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 793,
                  "EndLine": 808
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 538,
            "EndLine": 538,
            "Code": {
              "Lines": [
                {
                  "Number": 526,
                  "Content": "resource \"aws_network_acl_rule\" \"database_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"database_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 527,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 538,
                  "Content": "  protocol        = var.database_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.\u001b[38;5;33mdata\u001b[0mbase_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 540,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 541,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.database_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 526,
                  "EndLine": 541
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 373,
            "EndLine": 373,
            "Code": {
              "Lines": [
                {
                  "Number": 361,
                  "Content": "resource \"aws_network_acl_rule\" \"private_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 362,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 373,
                  "Content": "  protocol        = var.private_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 375,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 376,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 361,
                  "EndLine": 376
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 356,
            "EndLine": 356,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 356,
                  "Content": "  protocol        = var.private_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 254,
            "EndLine": 254,
            "Code": {
              "Lines": [
                {
                  "Number": 242,
                  "Content": "resource \"aws_network_acl_rule\" \"public_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 243,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 254,
                  "Content": "  protocol        = var.public_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 256,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 257,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 242,
                  "EndLine": 257
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 237,
            "EndLine": 237,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 237,
                  "Content": "  protocol        = var.public_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 237,
            "EndLine": 237,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 237,
                  "Content": "  protocol        = var.public_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/ipv6-dualstack/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 49
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 237,
            "EndLine": 237,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 237,
                  "Content": "  protocol        = var.public_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/secondary-cidr-blocks/main.tf",
                "Location": {
                  "StartLine": 26,
                  "EndLine": 45
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 254,
            "EndLine": 254,
            "Code": {
              "Lines": [
                {
                  "Number": 242,
                  "Content": "resource \"aws_network_acl_rule\" \"public_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 243,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 254,
                  "Content": "  protocol        = var.public_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 256,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 257,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 242,
                  "EndLine": 257
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/secondary-cidr-blocks/main.tf",
                "Location": {
                  "StartLine": 26,
                  "EndLine": 45
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 356,
            "EndLine": 356,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 356,
                  "Content": "  protocol        = var.private_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/secondary-cidr-blocks/main.tf",
                "Location": {
                  "StartLine": 26,
                  "EndLine": 45
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 373,
            "EndLine": 373,
            "Code": {
              "Lines": [
                {
                  "Number": 361,
                  "Content": "resource \"aws_network_acl_rule\" \"private_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 362,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 373,
                  "Content": "  protocol        = var.private_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 375,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 376,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 361,
                  "EndLine": 376
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/secondary-cidr-blocks/main.tf",
                "Location": {
                  "StartLine": 26,
                  "EndLine": 45
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 675,
            "EndLine": 675,
            "Code": {
              "Lines": [
                {
                  "Number": 663,
                  "Content": "resource \"aws_network_acl_rule\" \"redshift_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"redshift_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 664,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 675,
                  "Content": "  protocol        = var.redshift_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.redshift_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 677,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 678,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.redshift_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 663,
                  "EndLine": 678
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 373,
            "EndLine": 373,
            "Code": {
              "Lines": [
                {
                  "Number": 361,
                  "Content": "resource \"aws_network_acl_rule\" \"private_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 362,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 373,
                  "Content": "  protocol        = var.private_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 375,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 376,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 361,
                  "EndLine": 376
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/block-public-access/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 46
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 555,
            "EndLine": 555,
            "Code": {
              "Lines": [
                {
                  "Number": 543,
                  "Content": "resource \"aws_network_acl_rule\" \"database_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"database_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 544,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 555,
                  "Content": "  protocol        = var.database_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.\u001b[38;5;33mdata\u001b[0mbase_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 557,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 558,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.database_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 543,
                  "EndLine": 558
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 538,
            "EndLine": 538,
            "Code": {
              "Lines": [
                {
                  "Number": 526,
                  "Content": "resource \"aws_network_acl_rule\" \"database_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"database_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 527,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 538,
                  "Content": "  protocol        = var.database_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.\u001b[38;5;33mdata\u001b[0mbase_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 540,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 541,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.database_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 526,
                  "EndLine": 541
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 373,
            "EndLine": 373,
            "Code": {
              "Lines": [
                {
                  "Number": 361,
                  "Content": "resource \"aws_network_acl_rule\" \"private_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 362,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 373,
                  "Content": "  protocol        = var.private_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 375,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 376,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 361,
                  "EndLine": 376
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 237,
            "EndLine": 237,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 237,
                  "Content": "  protocol        = var.public_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/outpost/main.tf",
                "Location": {
                  "StartLine": 124,
                  "EndLine": 154
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 254,
            "EndLine": 254,
            "Code": {
              "Lines": [
                {
                  "Number": 242,
                  "Content": "resource \"aws_network_acl_rule\" \"public_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 243,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 254,
                  "Content": "  protocol        = var.public_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 256,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 257,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 242,
                  "EndLine": 257
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/outpost/main.tf",
                "Location": {
                  "StartLine": 124,
                  "EndLine": 154
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 356,
            "EndLine": 356,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 356,
                  "Content": "  protocol        = var.private_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/outpost/main.tf",
                "Location": {
                  "StartLine": 124,
                  "EndLine": 154
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 356,
            "EndLine": 356,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 356,
                  "Content": "  protocol        = var.private_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 555,
            "EndLine": 555,
            "Code": {
              "Lines": [
                {
                  "Number": 543,
                  "Content": "resource \"aws_network_acl_rule\" \"database_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"database_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 544,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 555,
                  "Content": "  protocol        = var.database_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.\u001b[38;5;33mdata\u001b[0mbase_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 557,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 558,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.database_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 543,
                  "EndLine": 558
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/ipv6-dualstack/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 49
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 538,
            "EndLine": 538,
            "Code": {
              "Lines": [
                {
                  "Number": 526,
                  "Content": "resource \"aws_network_acl_rule\" \"database_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"database_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 527,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 538,
                  "Content": "  protocol        = var.database_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.\u001b[38;5;33mdata\u001b[0mbase_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 540,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 541,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.database_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 526,
                  "EndLine": 541
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/ipv6-dualstack/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 49
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 373,
            "EndLine": 373,
            "Code": {
              "Lines": [
                {
                  "Number": 361,
                  "Content": "resource \"aws_network_acl_rule\" \"private_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 362,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 373,
                  "Content": "  protocol        = var.private_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 375,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 376,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 361,
                  "EndLine": 376
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/ipv6-dualstack/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 49
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 356,
            "EndLine": 356,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 356,
                  "Content": "  protocol        = var.private_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/ipv6-dualstack/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 49
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 254,
            "EndLine": 254,
            "Code": {
              "Lines": [
                {
                  "Number": 242,
                  "Content": "resource \"aws_network_acl_rule\" \"public_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 243,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 254,
                  "Content": "  protocol        = var.public_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 256,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 257,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 242,
                  "EndLine": 257
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/ipv6-dualstack/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 49
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 692,
            "EndLine": 692,
            "Code": {
              "Lines": [
                {
                  "Number": 680,
                  "Content": "resource \"aws_network_acl_rule\" \"redshift_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"redshift_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 681,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 692,
                  "Content": "  protocol        = var.redshift_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.redshift_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 694,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 695,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.redshift_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 680,
                  "EndLine": 695
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 822,
            "EndLine": 822,
            "Code": {
              "Lines": [
                {
                  "Number": 810,
                  "Content": "resource \"aws_network_acl_rule\" \"elasticache_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"elasticache_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 811,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 822,
                  "Content": "  protocol        = var.elasticache_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.elasticache_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 824,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 825,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.elasticache_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 810,
                  "EndLine": 825
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 555,
            "EndLine": 555,
            "Code": {
              "Lines": [
                {
                  "Number": 543,
                  "Content": "resource \"aws_network_acl_rule\" \"database_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"database_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 544,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 555,
                  "Content": "  protocol        = var.database_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.\u001b[38;5;33mdata\u001b[0mbase_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 557,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 558,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.database_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 543,
                  "EndLine": 558
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 923,
            "EndLine": 923,
            "Code": {
              "Lines": [
                {
                  "Number": 911,
                  "Content": "resource \"aws_network_acl_rule\" \"intra_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"intra_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 912,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 923,
                  "Content": "  protocol        = var.intra_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.intra_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 925,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 926,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.intra_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 911,
                  "EndLine": 926
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 237,
            "EndLine": 237,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 237,
                  "Content": "  protocol        = var.public_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 373,
            "EndLine": 373,
            "Code": {
              "Lines": [
                {
                  "Number": 361,
                  "Content": "resource \"aws_network_acl_rule\" \"private_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 362,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 373,
                  "Content": "  protocol        = var.private_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 375,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 376,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 361,
                  "EndLine": 376
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/simple/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 35
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 356,
            "EndLine": 356,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 356,
                  "Content": "  protocol        = var.private_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/network-acls/main.tf",
                "Location": {
                  "StartLine": 174,
                  "EndLine": 209
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 373,
            "EndLine": 373,
            "Code": {
              "Lines": [
                {
                  "Number": 361,
                  "Content": "resource \"aws_network_acl_rule\" \"private_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 362,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 373,
                  "Content": "  protocol        = var.private_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 375,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 376,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 361,
                  "EndLine": 376
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/network-acls/main.tf",
                "Location": {
                  "StartLine": 174,
                  "EndLine": 209
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 805,
            "EndLine": 805,
            "Code": {
              "Lines": [
                {
                  "Number": 793,
                  "Content": "resource \"aws_network_acl_rule\" \"elasticache_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"elasticache_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 794,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 805,
                  "Content": "  protocol        = var.elasticache_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.elasticache_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 807,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 808,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.elasticache_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 793,
                  "EndLine": 808
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/network-acls/main.tf",
                "Location": {
                  "StartLine": 174,
                  "EndLine": 209
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 356,
            "EndLine": 356,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 356,
                  "Content": "  protocol        = var.private_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/block-public-access/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 46
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 356,
            "EndLine": 356,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 356,
                  "Content": "  protocol        = var.private_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/simple/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 35
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_ipam_set_netmask",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 373,
            "EndLine": 373,
            "Code": {
              "Lines": [
                {
                  "Number": 361,
                  "Content": "resource \"aws_network_acl_rule\" \"private_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 362,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 373,
                  "Content": "  protocol        = var.private_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 375,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 376,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 361,
                  "EndLine": 376
                }
              },
              {
                "Resource": "module.vpc_ipam_set_netmask",
                "Filename": "examples/ipam/main.tf",
                "Location": {
                  "StartLine": 26,
                  "EndLine": 44
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_ipam_set_netmask",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 237,
            "EndLine": 237,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 237,
                  "Content": "  protocol        = var.public_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc_ipam_set_netmask",
                "Filename": "examples/ipam/main.tf",
                "Location": {
                  "StartLine": 26,
                  "EndLine": 44
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_ipam_set_netmask",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 254,
            "EndLine": 254,
            "Code": {
              "Lines": [
                {
                  "Number": 242,
                  "Content": "resource \"aws_network_acl_rule\" \"public_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 243,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 254,
                  "Content": "  protocol        = var.public_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 256,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 257,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 242,
                  "EndLine": 257
                }
              },
              {
                "Resource": "module.vpc_ipam_set_netmask",
                "Filename": "examples/ipam/main.tf",
                "Location": {
                  "StartLine": 26,
                  "EndLine": 44
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_ipam_set_netmask",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 356,
            "EndLine": 356,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 356,
                  "Content": "  protocol        = var.private_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc_ipam_set_netmask",
                "Filename": "examples/ipam/main.tf",
                "Location": {
                  "StartLine": 26,
                  "EndLine": 44
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 237,
            "EndLine": 237,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 237,
                  "Content": "  protocol        = var.public_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 116,
                  "EndLine": 132
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 373,
            "EndLine": 373,
            "Code": {
              "Lines": [
                {
                  "Number": 361,
                  "Content": "resource \"aws_network_acl_rule\" \"private_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 362,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 373,
                  "Content": "  protocol        = var.private_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 375,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 376,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 361,
                  "EndLine": 376
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 116,
                  "EndLine": 132
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 356,
            "EndLine": 356,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 356,
                  "Content": "  protocol        = var.private_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 116,
                  "EndLine": 132
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 254,
            "EndLine": 254,
            "Code": {
              "Lines": [
                {
                  "Number": 242,
                  "Content": "resource \"aws_network_acl_rule\" \"public_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 243,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 254,
                  "Content": "  protocol        = var.public_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 256,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 257,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 242,
                  "EndLine": 257
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 116,
                  "EndLine": 132
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_default",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 373,
            "EndLine": 373,
            "Code": {
              "Lines": [
                {
                  "Number": 361,
                  "Content": "resource \"aws_network_acl_rule\" \"private_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 362,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 373,
                  "Content": "  protocol        = var.private_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 375,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 376,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 361,
                  "EndLine": 376
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_default",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 63,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_default",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 356,
            "EndLine": 356,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 356,
                  "Content": "  protocol        = var.private_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_default",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 63,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_default",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 237,
            "EndLine": 237,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 237,
                  "Content": "  protocol        = var.public_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_default",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 63,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_default",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 254,
            "EndLine": 254,
            "Code": {
              "Lines": [
                {
                  "Number": 242,
                  "Content": "resource \"aws_network_acl_rule\" \"public_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 243,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 254,
                  "Content": "  protocol        = var.public_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 256,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 257,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 242,
                  "EndLine": 257
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_default",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 63,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_prefix",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 373,
            "EndLine": 373,
            "Code": {
              "Lines": [
                {
                  "Number": 361,
                  "Content": "resource \"aws_network_acl_rule\" \"private_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 362,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 373,
                  "Content": "  protocol        = var.private_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 375,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 376,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 361,
                  "EndLine": 376
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_prefix",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 87,
                  "EndLine": 113
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_prefix",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 356,
            "EndLine": 356,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 356,
                  "Content": "  protocol        = var.private_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_prefix",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 87,
                  "EndLine": 113
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_prefix",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 254,
            "EndLine": 254,
            "Code": {
              "Lines": [
                {
                  "Number": 242,
                  "Content": "resource \"aws_network_acl_rule\" \"public_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 243,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 254,
                  "Content": "  protocol        = var.public_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 256,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 257,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 242,
                  "EndLine": 257
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_prefix",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 87,
                  "EndLine": 113
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_prefix",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 237,
            "EndLine": 237,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 237,
                  "Content": "  protocol        = var.public_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_prefix",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 87,
                  "EndLine": 113
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_s3_bucket",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 254,
            "EndLine": 254,
            "Code": {
              "Lines": [
                {
                  "Number": 242,
                  "Content": "resource \"aws_network_acl_rule\" \"public_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 243,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 254,
                  "Content": "  protocol        = var.public_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 256,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 257,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 242,
                  "EndLine": 257
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_s3_bucket",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 27,
                  "EndLine": 42
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_s3_bucket",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 373,
            "EndLine": 373,
            "Code": {
              "Lines": [
                {
                  "Number": 361,
                  "Content": "resource \"aws_network_acl_rule\" \"private_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 362,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 373,
                  "Content": "  protocol        = var.private_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 375,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 376,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 361,
                  "EndLine": 376
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_s3_bucket",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 27,
                  "EndLine": 42
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_s3_bucket",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 237,
            "EndLine": 237,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 237,
                  "Content": "  protocol        = var.public_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_s3_bucket",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 27,
                  "EndLine": 42
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_s3_bucket",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 356,
            "EndLine": 356,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 356,
                  "Content": "  protocol        = var.private_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_s3_bucket",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 27,
                  "EndLine": 42
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_s3_bucket_parquet",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 237,
            "EndLine": 237,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 237,
                  "Content": "  protocol        = var.public_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_s3_bucket_parquet",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 44,
                  "EndLine": 60
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_s3_bucket_parquet",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 254,
            "EndLine": 254,
            "Code": {
              "Lines": [
                {
                  "Number": 242,
                  "Content": "resource \"aws_network_acl_rule\" \"public_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 243,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 254,
                  "Content": "  protocol        = var.public_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.public_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 256,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 257,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 242,
                  "EndLine": 257
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_s3_bucket_parquet",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 44,
                  "EndLine": 60
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_s3_bucket_parquet",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 356,
            "EndLine": 356,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 356,
                  "Content": "  protocol        = var.private_inbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_s3_bucket_parquet",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 44,
                  "EndLine": 60
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-excessive-port-access",
          "AVDID": "AVD-AWS-0102",
          "Title": "An Network ACL rule allows ALL ports.",
          "Description": "Ensure access to specific required ports is allowed, and nothing else.\n",
          "Message": "Network ACL rule allows access using ALL ports.",
          "Namespace": "builtin.aws.ec2.aws0102",
          "Query": "data.builtin.aws.ec2.aws0102.deny",
          "Resolution": "Set specific allowed ports",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-excessive-port-access"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_s3_bucket_parquet",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 373,
            "EndLine": 373,
            "Code": {
              "Lines": [
                {
                  "Number": 361,
                  "Content": "resource \"aws_network_acl_rule\" \"private_outbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_outbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 362,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 373,
                  "Content": "  protocol        = var.private_outbound_acl_rules[count.index][\"protocol\"]",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mprotocol\u001b[0m        = \u001b[38;5;33mvar\u001b[0m.private_outbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index][\u001b[38;5;37m\"protocol\"\u001b[0m]",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 375,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 376,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_outbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 361,
                  "EndLine": 376
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_s3_bucket_parquet",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 44,
                  "EndLine": 60
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 1026,
            "EndLine": 1026,
            "Code": {
              "Lines": [
                {
                  "Number": 1013,
                  "Content": "resource \"aws_network_acl_rule\" \"outpost_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"outpost_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1014,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1026,
                  "Content": "  cidr_block      = lookup(var.outpost_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.outpost_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 1027,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1028,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.outpost_inbound[3]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 1013,
                  "EndLine": 1028
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/outpost/main.tf",
                "Location": {
                  "StartLine": 124,
                  "EndLine": 154
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 676,
            "EndLine": 676,
            "Code": {
              "Lines": [
                {
                  "Number": 663,
                  "Content": "resource \"aws_network_acl_rule\" \"redshift_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"redshift_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 664,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 676,
                  "Content": "  cidr_block      = lookup(var.redshift_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.redshift_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 677,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 678,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.redshift_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 663,
                  "EndLine": 678
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 238,
            "EndLine": 238,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 238,
                  "Content": "  cidr_block      = lookup(var.public_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/secondary-cidr-blocks/main.tf",
                "Location": {
                  "StartLine": 26,
                  "EndLine": 45
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 357,
            "EndLine": 357,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 357,
                  "Content": "  cidr_block      = lookup(var.private_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/secondary-cidr-blocks/main.tf",
                "Location": {
                  "StartLine": 26,
                  "EndLine": 45
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 357,
            "EndLine": 357,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 357,
                  "Content": "  cidr_block      = lookup(var.private_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/block-public-access/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 46
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 1026,
            "EndLine": 1026,
            "Code": {
              "Lines": [
                {
                  "Number": 1013,
                  "Content": "resource \"aws_network_acl_rule\" \"outpost_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"outpost_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1014,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1026,
                  "Content": "  cidr_block      = lookup(var.outpost_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.outpost_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 1027,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1028,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.outpost_inbound[2]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 1013,
                  "EndLine": 1028
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/outpost/main.tf",
                "Location": {
                  "StartLine": 124,
                  "EndLine": 154
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 238,
            "EndLine": 238,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 238,
                  "Content": "  cidr_block      = lookup(var.public_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/outpost/main.tf",
                "Location": {
                  "StartLine": 124,
                  "EndLine": 154
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 357,
            "EndLine": 357,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 357,
                  "Content": "  cidr_block      = lookup(var.private_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/outpost/main.tf",
                "Location": {
                  "StartLine": 124,
                  "EndLine": 154
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 924,
            "EndLine": 924,
            "Code": {
              "Lines": [
                {
                  "Number": 911,
                  "Content": "resource \"aws_network_acl_rule\" \"intra_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"intra_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 912,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 924,
                  "Content": "  cidr_block      = lookup(var.intra_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.intra_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 925,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 926,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.intra_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 911,
                  "EndLine": 926
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 238,
            "EndLine": 238,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 238,
                  "Content": "  cidr_block      = lookup(var.public_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/network-acls/main.tf",
                "Location": {
                  "StartLine": 174,
                  "EndLine": 209
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 357,
            "EndLine": 357,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 357,
                  "Content": "  cidr_block      = lookup(var.private_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/network-acls/main.tf",
                "Location": {
                  "StartLine": 174,
                  "EndLine": 209
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 924,
            "EndLine": 924,
            "Code": {
              "Lines": [
                {
                  "Number": 911,
                  "Content": "resource \"aws_network_acl_rule\" \"intra_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"intra_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 912,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 924,
                  "Content": "  cidr_block      = lookup(var.intra_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.intra_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 925,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 926,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.intra_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 911,
                  "EndLine": 926
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 806,
            "EndLine": 806,
            "Code": {
              "Lines": [
                {
                  "Number": 793,
                  "Content": "resource \"aws_network_acl_rule\" \"elasticache_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"elasticache_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 794,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 806,
                  "Content": "  cidr_block      = lookup(var.elasticache_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.elasticache_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 807,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 808,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.elasticache_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 793,
                  "EndLine": 808
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 676,
            "EndLine": 676,
            "Code": {
              "Lines": [
                {
                  "Number": 663,
                  "Content": "resource \"aws_network_acl_rule\" \"redshift_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"redshift_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 664,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 676,
                  "Content": "  cidr_block      = lookup(var.redshift_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.redshift_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 677,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 678,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.redshift_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 663,
                  "EndLine": 678
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 539,
            "EndLine": 539,
            "Code": {
              "Lines": [
                {
                  "Number": 526,
                  "Content": "resource \"aws_network_acl_rule\" \"database_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"database_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 527,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 539,
                  "Content": "  cidr_block      = lookup(var.database_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.\u001b[38;5;33mdata\u001b[0mbase_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 540,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 541,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.database_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 526,
                  "EndLine": 541
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 357,
            "EndLine": 357,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 357,
                  "Content": "  cidr_block      = lookup(var.private_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 238,
            "EndLine": 238,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 238,
                  "Content": "  cidr_block      = lookup(var.public_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 806,
            "EndLine": 806,
            "Code": {
              "Lines": [
                {
                  "Number": 793,
                  "Content": "resource \"aws_network_acl_rule\" \"elasticache_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"elasticache_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 794,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 806,
                  "Content": "  cidr_block      = lookup(var.elasticache_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.elasticache_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 807,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 808,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.elasticache_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 793,
                  "EndLine": 808
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 806,
            "EndLine": 806,
            "Code": {
              "Lines": [
                {
                  "Number": 793,
                  "Content": "resource \"aws_network_acl_rule\" \"elasticache_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"elasticache_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 794,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 806,
                  "Content": "  cidr_block      = lookup(var.elasticache_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.elasticache_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 807,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 808,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.elasticache_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 793,
                  "EndLine": 808
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/network-acls/main.tf",
                "Location": {
                  "StartLine": 174,
                  "EndLine": 209
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 539,
            "EndLine": 539,
            "Code": {
              "Lines": [
                {
                  "Number": 526,
                  "Content": "resource \"aws_network_acl_rule\" \"database_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"database_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 527,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 539,
                  "Content": "  cidr_block      = lookup(var.database_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.\u001b[38;5;33mdata\u001b[0mbase_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 540,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 541,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.database_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 526,
                  "EndLine": 541
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 357,
            "EndLine": 357,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 357,
                  "Content": "  cidr_block      = lookup(var.private_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/simple/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 35
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 357,
            "EndLine": 357,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 357,
                  "Content": "  cidr_block      = lookup(var.private_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 238,
            "EndLine": 238,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 238,
                  "Content": "  cidr_block      = lookup(var.public_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/complete/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 539,
            "EndLine": 539,
            "Code": {
              "Lines": [
                {
                  "Number": 526,
                  "Content": "resource \"aws_network_acl_rule\" \"database_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"database_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 527,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 539,
                  "Content": "  cidr_block      = lookup(var.database_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.\u001b[38;5;33mdata\u001b[0mbase_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 540,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 541,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.database_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 526,
                  "EndLine": 541
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/ipv6-dualstack/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 49
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 357,
            "EndLine": 357,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 357,
                  "Content": "  cidr_block      = lookup(var.private_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/ipv6-dualstack/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 49
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 238,
            "EndLine": 238,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 238,
                  "Content": "  cidr_block      = lookup(var.public_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "examples/ipv6-dualstack/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 49
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_ipam_set_netmask",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 238,
            "EndLine": 238,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 238,
                  "Content": "  cidr_block      = lookup(var.public_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc_ipam_set_netmask",
                "Filename": "examples/ipam/main.tf",
                "Location": {
                  "StartLine": 26,
                  "EndLine": 44
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_ipam_set_netmask",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 357,
            "EndLine": 357,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 357,
                  "Content": "  cidr_block      = lookup(var.private_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc_ipam_set_netmask",
                "Filename": "examples/ipam/main.tf",
                "Location": {
                  "StartLine": 26,
                  "EndLine": 44
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 238,
            "EndLine": 238,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 238,
                  "Content": "  cidr_block      = lookup(var.public_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 116,
                  "EndLine": 132
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 357,
            "EndLine": 357,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 357,
                  "Content": "  cidr_block      = lookup(var.private_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 116,
                  "EndLine": 132
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_default",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 357,
            "EndLine": 357,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 357,
                  "Content": "  cidr_block      = lookup(var.private_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_default",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 63,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_default",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 238,
            "EndLine": 238,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 238,
                  "Content": "  cidr_block      = lookup(var.public_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_default",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 63,
                  "EndLine": 84
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_prefix",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 357,
            "EndLine": 357,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 357,
                  "Content": "  cidr_block      = lookup(var.private_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_prefix",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 87,
                  "EndLine": 113
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_prefix",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 238,
            "EndLine": 238,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 238,
                  "Content": "  cidr_block      = lookup(var.public_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_cloudwatch_logs_prefix",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 87,
                  "EndLine": 113
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_s3_bucket",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 238,
            "EndLine": 238,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 238,
                  "Content": "  cidr_block      = lookup(var.public_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_s3_bucket",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 27,
                  "EndLine": 42
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_s3_bucket",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 357,
            "EndLine": 357,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 357,
                  "Content": "  cidr_block      = lookup(var.private_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_s3_bucket",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 27,
                  "EndLine": 42
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_s3_bucket_parquet",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 238,
            "EndLine": 238,
            "Code": {
              "Lines": [
                {
                  "Number": 225,
                  "Content": "resource \"aws_network_acl_rule\" \"public_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"public_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 226,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 238,
                  "Content": "  cidr_block      = lookup(var.public_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.public_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 239,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 240,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.public_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 225,
                  "EndLine": 240
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_s3_bucket_parquet",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 44,
                  "EndLine": 60
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-acl",
          "AVDID": "AVD-AWS-0105",
          "Title": "Network ACLs should not allow unrestricted ingress to SSH or RDP from any IP address.",
          "Description": "The Network Access Control List (NACL) function provide stateless filtering of ingress and\negress network traffic to AWS resources. It is recommended that no NACL allows\nunrestricted ingress access to remote server administration ports, such as SSH to port 22\nand RDP to port 3389.\n",
          "Message": "Network ACL rule allows unrestricted ingress from any IP address.",
          "Namespace": "builtin.aws.ec2.aws0105",
          "Query": "data.builtin.aws.ec2.aws0105.deny",
          "Resolution": "Set a more restrictive CIDR range",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl",
          "References": [
            "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html",
            "https://docs.aws.amazon.com/securityhub/latest/userguide/ec2-controls.html#ec2-21",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-acl"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_with_flow_logs_s3_bucket_parquet",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 357,
            "EndLine": 357,
            "Code": {
              "Lines": [
                {
                  "Number": 344,
                  "Content": "resource \"aws_network_acl_rule\" \"private_inbound\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_network_acl_rule\"\u001b[0m \u001b[38;5;37m\"private_inbound\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 345,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 357,
                  "Content": "  cidr_block      = lookup(var.private_inbound_acl_rules[count.index], \"cidr_block\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m      =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33mvar\u001b[0m.private_inbound_acl_rules[\u001b[38;5;33mcount\u001b[0m.index], \u001b[38;5;37m\"cidr_block\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 358,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 359,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_network_acl_rule.private_inbound[0]",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 344,
                  "EndLine": 359
                }
              },
              {
                "Resource": "module.vpc_with_flow_logs_s3_bucket_parquet",
                "Filename": "examples/vpc-flow-logs/main.tf",
                "Location": {
                  "StartLine": 44,
                  "EndLine": 60
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-autoscaling-enable-at-rest-encryption",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n",
          "Message": "VPC does not have VPC Flow Logs enabled.",
          "Namespace": "builtin.aws.ec2.aws0178",
          "Query": "data.builtin.aws.ec2.aws0178.deny",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 1252,
            "EndLine": 1263,
            "Code": {
              "Lines": [
                {
                  "Number": 1252,
                  "Content": "resource \"aws_default_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_default_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 1253,
                  "Content": "  count = var.manage_default_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = \u001b[38;5;33mvar\u001b[0m.manage_default_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1254,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1255,
                  "Content": "  enable_dns_support   = var.default_vpc_enable_dns_support",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245menable_dns_support\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.default_vpc_enable_dns_support",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1256,
                  "Content": "  enable_dns_hostnames = var.default_vpc_enable_dns_hostnames",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245menable_dns_hostnames\u001b[0m = \u001b[38;5;33mvar\u001b[0m.default_vpc_enable_dns_hostnames",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1257,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1258,
                  "Content": "  tags = merge(",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mtags\u001b[0m =\u001b[38;5;33m merge\u001b[0m(",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1259,
                  "Content": "    { \"Name\" = coalesce(var.default_vpc_name, \"default\") },",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    { \u001b[38;5;37m\"Name\"\u001b[0m \u001b[38;5;245m=\u001b[0m\u001b[38;5;33m coalesce\u001b[0m(\u001b[38;5;33mvar\u001b[0m.default_vpc_name, \u001b[38;5;37m\"default\"\u001b[0m) },",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 1260,
                  "Content": "    var.tags,",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    \u001b[38;5;33mvar\u001b[0m.tags,",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 1261,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc",
                "Filename": "examples/manage-default-vpc/main.tf",
                "Location": {
                  "StartLine": 20,
                  "EndLine": 30
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-autoscaling-enable-at-rest-encryption",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n",
          "Message": "VPC does not have VPC Flow Logs enabled.",
          "Namespace": "builtin.aws.ec2.aws0178",
          "Query": "data.builtin.aws.ec2.aws0178.deny",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 28,
            "EndLine": 51,
            "Code": {
              "Lines": [
                {
                  "Number": 28,
                  "Content": "resource \"aws_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  count = local.create_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  cidr_block          = var.use_ipam_pool ? null : var.cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m          = \u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m null \u001b[38;5;245m:\u001b[0m \u001b[38;5;33mvar\u001b[0m.cidr",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_ipam_pool_id\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.ipv4_ipam_pool_id",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  ipv4_netmask_length = var.ipv4_netmask_length",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_netmask_length\u001b[0m = \u001b[38;5;33mvar\u001b[0m.ipv4_netmask_length",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 35,
                  "Content": "  assign_generated_ipv6_cidr_block     = var.enable_ipv6 \u0026\u0026 !var.use_ipam_pool ? true : null",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245massign_generated_ipv6_cidr_block\u001b[0m     = \u001b[38;5;33mvar\u001b[0m.enable_ipv6 \u001b[38;5;245m\u0026\u0026\u001b[0m \u001b[38;5;245m!\u001b[0m\u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m \u001b[38;5;166mtrue\u001b[0m \u001b[38;5;245m:\u001b[0m null",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 36,
                  "Content": "  ipv6_cidr_block                      = var.ipv6_cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv6_cidr_block\u001b[0m                      = \u001b[38;5;33mvar\u001b[0m.ipv6_cidr",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 37,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc",
                "Filename": "examples/secondary-cidr-blocks/main.tf",
                "Location": {
                  "StartLine": 26,
                  "EndLine": 45
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-autoscaling-enable-at-rest-encryption",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n",
          "Message": "VPC does not have VPC Flow Logs enabled.",
          "Namespace": "builtin.aws.ec2.aws0178",
          "Query": "data.builtin.aws.ec2.aws0178.deny",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 28,
            "EndLine": 51,
            "Code": {
              "Lines": [
                {
                  "Number": 28,
                  "Content": "resource \"aws_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  count = local.create_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  cidr_block          = var.use_ipam_pool ? null : var.cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m          = \u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m null \u001b[38;5;245m:\u001b[0m \u001b[38;5;33mvar\u001b[0m.cidr",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_ipam_pool_id\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.ipv4_ipam_pool_id",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  ipv4_netmask_length = var.ipv4_netmask_length",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_netmask_length\u001b[0m = \u001b[38;5;33mvar\u001b[0m.ipv4_netmask_length",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 35,
                  "Content": "  assign_generated_ipv6_cidr_block     = var.enable_ipv6 \u0026\u0026 !var.use_ipam_pool ? true : null",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245massign_generated_ipv6_cidr_block\u001b[0m     = \u001b[38;5;33mvar\u001b[0m.enable_ipv6 \u001b[38;5;245m\u0026\u0026\u001b[0m \u001b[38;5;245m!\u001b[0m\u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m \u001b[38;5;166mtrue\u001b[0m \u001b[38;5;245m:\u001b[0m null",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 36,
                  "Content": "  ipv6_cidr_block                      = var.ipv6_cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv6_cidr_block\u001b[0m                      = \u001b[38;5;33mvar\u001b[0m.ipv6_cidr",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 37,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc",
                "Filename": "examples/block-public-access/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 46
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-autoscaling-enable-at-rest-encryption",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n",
          "Message": "VPC does not have VPC Flow Logs enabled.",
          "Namespace": "builtin.aws.ec2.aws0178",
          "Query": "data.builtin.aws.ec2.aws0178.deny",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 28,
            "EndLine": 51,
            "Code": {
              "Lines": [
                {
                  "Number": 28,
                  "Content": "resource \"aws_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  count = local.create_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  cidr_block          = var.use_ipam_pool ? null : var.cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m          = \u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m null \u001b[38;5;245m:\u001b[0m \u001b[38;5;33mvar\u001b[0m.cidr",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_ipam_pool_id\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.ipv4_ipam_pool_id",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  ipv4_netmask_length = var.ipv4_netmask_length",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_netmask_length\u001b[0m = \u001b[38;5;33mvar\u001b[0m.ipv4_netmask_length",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 35,
                  "Content": "  assign_generated_ipv6_cidr_block     = var.enable_ipv6 \u0026\u0026 !var.use_ipam_pool ? true : null",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245massign_generated_ipv6_cidr_block\u001b[0m     = \u001b[38;5;33mvar\u001b[0m.enable_ipv6 \u001b[38;5;245m\u0026\u0026\u001b[0m \u001b[38;5;245m!\u001b[0m\u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m \u001b[38;5;166mtrue\u001b[0m \u001b[38;5;245m:\u001b[0m null",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 36,
                  "Content": "  ipv6_cidr_block                      = var.ipv6_cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv6_cidr_block\u001b[0m                      = \u001b[38;5;33mvar\u001b[0m.ipv6_cidr",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 37,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc",
                "Filename": "examples/outpost/main.tf",
                "Location": {
                  "StartLine": 124,
                  "EndLine": 154
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-autoscaling-enable-at-rest-encryption",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n",
          "Message": "VPC does not have VPC Flow Logs enabled.",
          "Namespace": "builtin.aws.ec2.aws0178",
          "Query": "data.builtin.aws.ec2.aws0178.deny",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 28,
            "EndLine": 51,
            "Code": {
              "Lines": [
                {
                  "Number": 28,
                  "Content": "resource \"aws_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  count = local.create_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  cidr_block          = var.use_ipam_pool ? null : var.cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m          = \u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m null \u001b[38;5;245m:\u001b[0m \u001b[38;5;33mvar\u001b[0m.cidr",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_ipam_pool_id\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.ipv4_ipam_pool_id",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  ipv4_netmask_length = var.ipv4_netmask_length",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_netmask_length\u001b[0m = \u001b[38;5;33mvar\u001b[0m.ipv4_netmask_length",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 35,
                  "Content": "  assign_generated_ipv6_cidr_block     = var.enable_ipv6 \u0026\u0026 !var.use_ipam_pool ? true : null",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245massign_generated_ipv6_cidr_block\u001b[0m     = \u001b[38;5;33mvar\u001b[0m.enable_ipv6 \u001b[38;5;245m\u0026\u0026\u001b[0m \u001b[38;5;245m!\u001b[0m\u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m \u001b[38;5;166mtrue\u001b[0m \u001b[38;5;245m:\u001b[0m null",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 36,
                  "Content": "  ipv6_cidr_block                      = var.ipv6_cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv6_cidr_block\u001b[0m                      = \u001b[38;5;33mvar\u001b[0m.ipv6_cidr",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 37,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc",
                "Filename": "examples/separate-route-tables/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 47
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-autoscaling-enable-at-rest-encryption",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n",
          "Message": "VPC does not have VPC Flow Logs enabled.",
          "Namespace": "builtin.aws.ec2.aws0178",
          "Query": "data.builtin.aws.ec2.aws0178.deny",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 28,
            "EndLine": 51,
            "Code": {
              "Lines": [
                {
                  "Number": 28,
                  "Content": "resource \"aws_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  count = local.create_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  cidr_block          = var.use_ipam_pool ? null : var.cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m          = \u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m null \u001b[38;5;245m:\u001b[0m \u001b[38;5;33mvar\u001b[0m.cidr",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_ipam_pool_id\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.ipv4_ipam_pool_id",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  ipv4_netmask_length = var.ipv4_netmask_length",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_netmask_length\u001b[0m = \u001b[38;5;33mvar\u001b[0m.ipv4_netmask_length",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 35,
                  "Content": "  assign_generated_ipv6_cidr_block     = var.enable_ipv6 \u0026\u0026 !var.use_ipam_pool ? true : null",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245massign_generated_ipv6_cidr_block\u001b[0m     = \u001b[38;5;33mvar\u001b[0m.enable_ipv6 \u001b[38;5;245m\u0026\u0026\u001b[0m \u001b[38;5;245m!\u001b[0m\u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m \u001b[38;5;166mtrue\u001b[0m \u001b[38;5;245m:\u001b[0m null",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 36,
                  "Content": "  ipv6_cidr_block                      = var.ipv6_cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv6_cidr_block\u001b[0m                      = \u001b[38;5;33mvar\u001b[0m.ipv6_cidr",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 37,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc",
                "Filename": "examples/ipv6-only/main.tf",
                "Location": {
                  "StartLine": 22,
                  "EndLine": 43
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-autoscaling-enable-at-rest-encryption",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n",
          "Message": "VPC does not have VPC Flow Logs enabled.",
          "Namespace": "builtin.aws.ec2.aws0178",
          "Query": "data.builtin.aws.ec2.aws0178.deny",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 28,
            "EndLine": 51,
            "Code": {
              "Lines": [
                {
                  "Number": 28,
                  "Content": "resource \"aws_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  count = local.create_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  cidr_block          = var.use_ipam_pool ? null : var.cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m          = \u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m null \u001b[38;5;245m:\u001b[0m \u001b[38;5;33mvar\u001b[0m.cidr",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_ipam_pool_id\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.ipv4_ipam_pool_id",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  ipv4_netmask_length = var.ipv4_netmask_length",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_netmask_length\u001b[0m = \u001b[38;5;33mvar\u001b[0m.ipv4_netmask_length",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 35,
                  "Content": "  assign_generated_ipv6_cidr_block     = var.enable_ipv6 \u0026\u0026 !var.use_ipam_pool ? true : null",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245massign_generated_ipv6_cidr_block\u001b[0m     = \u001b[38;5;33mvar\u001b[0m.enable_ipv6 \u001b[38;5;245m\u0026\u0026\u001b[0m \u001b[38;5;245m!\u001b[0m\u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m \u001b[38;5;166mtrue\u001b[0m \u001b[38;5;245m:\u001b[0m null",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 36,
                  "Content": "  ipv6_cidr_block                      = var.ipv6_cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv6_cidr_block\u001b[0m                      = \u001b[38;5;33mvar\u001b[0m.ipv6_cidr",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 37,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc",
                "Filename": "examples/ipv6-dualstack/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 49
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-autoscaling-enable-at-rest-encryption",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n",
          "Message": "VPC does not have VPC Flow Logs enabled.",
          "Namespace": "builtin.aws.ec2.aws0178",
          "Query": "data.builtin.aws.ec2.aws0178.deny",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 28,
            "EndLine": 51,
            "Code": {
              "Lines": [
                {
                  "Number": 28,
                  "Content": "resource \"aws_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  count = local.create_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  cidr_block          = var.use_ipam_pool ? null : var.cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m          = \u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m null \u001b[38;5;245m:\u001b[0m \u001b[38;5;33mvar\u001b[0m.cidr",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_ipam_pool_id\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.ipv4_ipam_pool_id",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  ipv4_netmask_length = var.ipv4_netmask_length",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_netmask_length\u001b[0m = \u001b[38;5;33mvar\u001b[0m.ipv4_netmask_length",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 35,
                  "Content": "  assign_generated_ipv6_cidr_block     = var.enable_ipv6 \u0026\u0026 !var.use_ipam_pool ? true : null",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245massign_generated_ipv6_cidr_block\u001b[0m     = \u001b[38;5;33mvar\u001b[0m.enable_ipv6 \u001b[38;5;245m\u0026\u0026\u001b[0m \u001b[38;5;245m!\u001b[0m\u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m \u001b[38;5;166mtrue\u001b[0m \u001b[38;5;245m:\u001b[0m null",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 36,
                  "Content": "  ipv6_cidr_block                      = var.ipv6_cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv6_cidr_block\u001b[0m                      = \u001b[38;5;33mvar\u001b[0m.ipv6_cidr",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 37,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc",
                "Filename": "examples/network-acls/main.tf",
                "Location": {
                  "StartLine": 174,
                  "EndLine": 209
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-autoscaling-enable-at-rest-encryption",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n",
          "Message": "VPC does not have VPC Flow Logs enabled.",
          "Namespace": "builtin.aws.ec2.aws0178",
          "Query": "data.builtin.aws.ec2.aws0178.deny",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 28,
            "EndLine": 51,
            "Code": {
              "Lines": [
                {
                  "Number": 28,
                  "Content": "resource \"aws_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  count = local.create_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  cidr_block          = var.use_ipam_pool ? null : var.cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m          = \u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m null \u001b[38;5;245m:\u001b[0m \u001b[38;5;33mvar\u001b[0m.cidr",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_ipam_pool_id\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.ipv4_ipam_pool_id",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  ipv4_netmask_length = var.ipv4_netmask_length",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_netmask_length\u001b[0m = \u001b[38;5;33mvar\u001b[0m.ipv4_netmask_length",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 35,
                  "Content": "  assign_generated_ipv6_cidr_block     = var.enable_ipv6 \u0026\u0026 !var.use_ipam_pool ? true : null",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245massign_generated_ipv6_cidr_block\u001b[0m     = \u001b[38;5;33mvar\u001b[0m.enable_ipv6 \u001b[38;5;245m\u0026\u0026\u001b[0m \u001b[38;5;245m!\u001b[0m\u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m \u001b[38;5;166mtrue\u001b[0m \u001b[38;5;245m:\u001b[0m null",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 36,
                  "Content": "  ipv6_cidr_block                      = var.ipv6_cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv6_cidr_block\u001b[0m                      = \u001b[38;5;33mvar\u001b[0m.ipv6_cidr",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 37,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc",
                "Filename": "examples/simple/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 35
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-autoscaling-enable-at-rest-encryption",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n",
          "Message": "VPC does not have VPC Flow Logs enabled.",
          "Namespace": "builtin.aws.ec2.aws0178",
          "Query": "data.builtin.aws.ec2.aws0178.deny",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_ipam_set_cidr",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 28,
            "EndLine": 51,
            "Code": {
              "Lines": [
                {
                  "Number": 28,
                  "Content": "resource \"aws_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  count = local.create_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  cidr_block          = var.use_ipam_pool ? null : var.cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m          = \u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m null \u001b[38;5;245m:\u001b[0m \u001b[38;5;33mvar\u001b[0m.cidr",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_ipam_pool_id\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.ipv4_ipam_pool_id",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  ipv4_netmask_length = var.ipv4_netmask_length",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_netmask_length\u001b[0m = \u001b[38;5;33mvar\u001b[0m.ipv4_netmask_length",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 35,
                  "Content": "  assign_generated_ipv6_cidr_block     = var.enable_ipv6 \u0026\u0026 !var.use_ipam_pool ? true : null",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245massign_generated_ipv6_cidr_block\u001b[0m     = \u001b[38;5;33mvar\u001b[0m.enable_ipv6 \u001b[38;5;245m\u0026\u0026\u001b[0m \u001b[38;5;245m!\u001b[0m\u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m \u001b[38;5;166mtrue\u001b[0m \u001b[38;5;245m:\u001b[0m null",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 36,
                  "Content": "  ipv6_cidr_block                      = var.ipv6_cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv6_cidr_block\u001b[0m                      = \u001b[38;5;33mvar\u001b[0m.ipv6_cidr",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 37,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc_ipam_set_cidr",
                "Filename": "examples/ipam/main.tf",
                "Location": {
                  "StartLine": 46,
                  "EndLine": 60
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-autoscaling-enable-at-rest-encryption",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n",
          "Message": "VPC does not have VPC Flow Logs enabled.",
          "Namespace": "builtin.aws.ec2.aws0178",
          "Query": "data.builtin.aws.ec2.aws0178.deny",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_ipam_set_netmask",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 28,
            "EndLine": 51,
            "Code": {
              "Lines": [
                {
                  "Number": 28,
                  "Content": "resource \"aws_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  count = local.create_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  cidr_block          = var.use_ipam_pool ? null : var.cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m          = \u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m null \u001b[38;5;245m:\u001b[0m \u001b[38;5;33mvar\u001b[0m.cidr",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_ipam_pool_id\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.ipv4_ipam_pool_id",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  ipv4_netmask_length = var.ipv4_netmask_length",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_netmask_length\u001b[0m = \u001b[38;5;33mvar\u001b[0m.ipv4_netmask_length",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 35,
                  "Content": "  assign_generated_ipv6_cidr_block     = var.enable_ipv6 \u0026\u0026 !var.use_ipam_pool ? true : null",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245massign_generated_ipv6_cidr_block\u001b[0m     = \u001b[38;5;33mvar\u001b[0m.enable_ipv6 \u001b[38;5;245m\u0026\u0026\u001b[0m \u001b[38;5;245m!\u001b[0m\u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m \u001b[38;5;166mtrue\u001b[0m \u001b[38;5;245m:\u001b[0m null",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 36,
                  "Content": "  ipv6_cidr_block                      = var.ipv6_cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv6_cidr_block\u001b[0m                      = \u001b[38;5;33mvar\u001b[0m.ipv6_cidr",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 37,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc_ipam_set_netmask",
                "Filename": "examples/ipam/main.tf",
                "Location": {
                  "StartLine": 26,
                  "EndLine": 44
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-autoscaling-enable-at-rest-encryption",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n",
          "Message": "VPC does not have VPC Flow Logs enabled.",
          "Namespace": "builtin.aws.ec2.aws0178",
          "Query": "data.builtin.aws.ec2.aws0178.deny",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_issue_108",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 28,
            "EndLine": 51,
            "Code": {
              "Lines": [
                {
                  "Number": 28,
                  "Content": "resource \"aws_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  count = local.create_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  cidr_block          = var.use_ipam_pool ? null : var.cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m          = \u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m null \u001b[38;5;245m:\u001b[0m \u001b[38;5;33mvar\u001b[0m.cidr",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_ipam_pool_id\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.ipv4_ipam_pool_id",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  ipv4_netmask_length = var.ipv4_netmask_length",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_netmask_length\u001b[0m = \u001b[38;5;33mvar\u001b[0m.ipv4_netmask_length",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 35,
                  "Content": "  assign_generated_ipv6_cidr_block     = var.enable_ipv6 \u0026\u0026 !var.use_ipam_pool ? true : null",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245massign_generated_ipv6_cidr_block\u001b[0m     = \u001b[38;5;33mvar\u001b[0m.enable_ipv6 \u001b[38;5;245m\u0026\u0026\u001b[0m \u001b[38;5;245m!\u001b[0m\u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m \u001b[38;5;166mtrue\u001b[0m \u001b[38;5;245m:\u001b[0m null",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 36,
                  "Content": "  ipv6_cidr_block                      = var.ipv6_cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv6_cidr_block\u001b[0m                      = \u001b[38;5;33mvar\u001b[0m.ipv6_cidr",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 37,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc_issue_108",
                "Filename": "examples/issues/main.tf",
                "Location": {
                  "StartLine": 74,
                  "EndLine": 91
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-autoscaling-enable-at-rest-encryption",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n",
          "Message": "VPC does not have VPC Flow Logs enabled.",
          "Namespace": "builtin.aws.ec2.aws0178",
          "Query": "data.builtin.aws.ec2.aws0178.deny",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_issue_44",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 28,
            "EndLine": 51,
            "Code": {
              "Lines": [
                {
                  "Number": 28,
                  "Content": "resource \"aws_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  count = local.create_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  cidr_block          = var.use_ipam_pool ? null : var.cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m          = \u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m null \u001b[38;5;245m:\u001b[0m \u001b[38;5;33mvar\u001b[0m.cidr",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_ipam_pool_id\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.ipv4_ipam_pool_id",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  ipv4_netmask_length = var.ipv4_netmask_length",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_netmask_length\u001b[0m = \u001b[38;5;33mvar\u001b[0m.ipv4_netmask_length",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 35,
                  "Content": "  assign_generated_ipv6_cidr_block     = var.enable_ipv6 \u0026\u0026 !var.use_ipam_pool ? true : null",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245massign_generated_ipv6_cidr_block\u001b[0m     = \u001b[38;5;33mvar\u001b[0m.enable_ipv6 \u001b[38;5;245m\u0026\u0026\u001b[0m \u001b[38;5;245m!\u001b[0m\u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m \u001b[38;5;166mtrue\u001b[0m \u001b[38;5;245m:\u001b[0m null",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 36,
                  "Content": "  ipv6_cidr_block                      = var.ipv6_cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv6_cidr_block\u001b[0m                      = \u001b[38;5;33mvar\u001b[0m.ipv6_cidr",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 37,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc_issue_44",
                "Filename": "examples/issues/main.tf",
                "Location": {
                  "StartLine": 24,
                  "EndLine": 42
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-autoscaling-enable-at-rest-encryption",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n",
          "Message": "VPC does not have VPC Flow Logs enabled.",
          "Namespace": "builtin.aws.ec2.aws0178",
          "Query": "data.builtin.aws.ec2.aws0178.deny",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc_issue_46",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 28,
            "EndLine": 51,
            "Code": {
              "Lines": [
                {
                  "Number": 28,
                  "Content": "resource \"aws_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  count = local.create_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  cidr_block          = var.use_ipam_pool ? null : var.cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m          = \u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m null \u001b[38;5;245m:\u001b[0m \u001b[38;5;33mvar\u001b[0m.cidr",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_ipam_pool_id\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.ipv4_ipam_pool_id",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  ipv4_netmask_length = var.ipv4_netmask_length",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_netmask_length\u001b[0m = \u001b[38;5;33mvar\u001b[0m.ipv4_netmask_length",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 35,
                  "Content": "  assign_generated_ipv6_cidr_block     = var.enable_ipv6 \u0026\u0026 !var.use_ipam_pool ? true : null",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245massign_generated_ipv6_cidr_block\u001b[0m     = \u001b[38;5;33mvar\u001b[0m.enable_ipv6 \u001b[38;5;245m\u0026\u0026\u001b[0m \u001b[38;5;245m!\u001b[0m\u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m \u001b[38;5;166mtrue\u001b[0m \u001b[38;5;245m:\u001b[0m null",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 36,
                  "Content": "  ipv6_cidr_block                      = var.ipv6_cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv6_cidr_block\u001b[0m                      = \u001b[38;5;33mvar\u001b[0m.ipv6_cidr",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 37,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc_issue_46",
                "Filename": "examples/issues/main.tf",
                "Location": {
                  "StartLine": 48,
                  "EndLine": 68
                }
              }
            ]
          }
        }
      ]
    }
  ]
}
